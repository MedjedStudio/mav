services:
  mysql:
    image: mysql:8.0
    container_name: mav-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password_for_docker
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - mav-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRE_HOURS=${JWT_EXPIRE_HOURS}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - DEBUG=${DEBUG}
    networks:
      - mav-network
    depends_on:
      mysql:
        condition: service_healthy
    command: ["./migrate.sh"]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRE_HOURS=${JWT_EXPIRE_HOURS}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - DEBUG=${DEBUG}
      - HOST=0.0.0.0
      - PORT=8000
      - UPLOAD_DIR=/app/uploads
    networks:
      - mav-network
    depends_on:
      migrate:
        condition: service_completed_successfully
      mysql:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=${VITE_API_URL}
    depends_on:
      - backend
    networks:
      - mav-network

volumes:
  mysql_data:

networks:
  mav-network:
    driver: bridge